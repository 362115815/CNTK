//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class SparseSequenceDataDouble : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SparseSequenceDataDouble(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SparseSequenceDataDouble obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SparseSequenceDataDouble() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CSEvalPINVOKE.delete_SparseSequenceDataDouble(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public SparseSequenceDataDouble(SWIGTYPE_p_std__vectorT_double_t data, SWIGTYPE_p_std__vectorT_int_t indices, SWIGTYPE_p_std__vectorT_int_t nnzCounts) : this(CSEvalPINVOKE.new_SparseSequenceDataDouble(SWIGTYPE_p_std__vectorT_double_t.getCPtr(data), SWIGTYPE_p_std__vectorT_int_t.getCPtr(indices), SWIGTYPE_p_std__vectorT_int_t.getCPtr(nnzCounts)), true) {
    if (CSEvalPINVOKE.SWIGPendingException.Pending) throw CSEvalPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__vectorT_double_t m_data {
    set {
      CSEvalPINVOKE.SparseSequenceDataDouble_m_data_set(swigCPtr, SWIGTYPE_p_std__vectorT_double_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = CSEvalPINVOKE.SparseSequenceDataDouble_m_data_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_double_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_double_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_int_t m_indices {
    set {
      CSEvalPINVOKE.SparseSequenceDataDouble_m_indices_set(swigCPtr, SWIGTYPE_p_std__vectorT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = CSEvalPINVOKE.SparseSequenceDataDouble_m_indices_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_int_t(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_int_t m_nnzCounts {
    set {
      CSEvalPINVOKE.SparseSequenceDataDouble_m_nnzCounts_set(swigCPtr, SWIGTYPE_p_std__vectorT_int_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = CSEvalPINVOKE.SparseSequenceDataDouble_m_nnzCounts_get(swigCPtr);
      SWIGTYPE_p_std__vectorT_int_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__vectorT_int_t(cPtr, false);
      return ret;
    } 
  }

}
